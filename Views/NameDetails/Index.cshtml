<!-- Name Details Index -->

@using M79Climbing.Helpers
@model IEnumerable<IGrouping<string, Cap>>

@{
    var name = ViewData["Name"] as string;
    var playerStats = ViewData["PlayerStats"] as M79Climbing.Models.PlayerStats;

    ViewData["Title"] = name;
}

<h1>@name</h1>

<hr class="divider"/>

@if (playerStats != null)
{
    <div class="player-stats-container">
        <div class="row">
            <div class="col-md-4">
                <div class="player-stats-card">
                    <p>  &#x1F947; Golds: @ViewData["Top1Count"]</p>
                    <p>&#x1F948; Silvers: @ViewData["Top2Count"]</p>
                    <p>&#x1F949; Bronzes: @ViewData["Top3Count"]</p>
                </div>
            </div>
            <div class="col-md-4">
                <div class="player-stats-card">
                    <p>&#x1F3C1; Total Caps: @ViewData["CapsCount"]</p>
                    <p>&#x1F4CB; Visits: @playerStats.MapFinishes</p>  <!-- Sike, 2lazy-->
                    <p>&#x23F3; Playtime: @playerStats.TimeSpentOnServer.ToString(@"hh\h\ mm\m\ ss\s")</p>
                </div>
            </div>
            <div class="col-md-4">
                <div class="player-stats-card">
                    <p>&#x1F501; Respawns: @playerStats.Respawns</p>
                    <p>&#x1F4A3; Grenades Thrown: @playerStats.GrenadesThrown</p>
                    <p>&#x1F4A5; M79 Shots Fired: @playerStats.M79ShotsFired</p>
                </div>
            </div>
        </div>
    </div>
}

<hr class="divider" />

<table class="table" id="legend-table-leaderboard">
    <thead>
        <tr>
            <th>Map</th>
            <th>Time</th>
            <th>Date</th>
        </tr>
    </thead>
</table>

@foreach (var group in Model)
{
    <details>
        <summary>
            <table class="table" id="outter-table-leaderboard">
                <tbody>
                    <tr>
                        <td>@group.First().Map</td>
                        <td>@TimeHelper.ReturnTime(group.First().Time)</td>
                        <td>@group.First().CapDate.ToString("dd-MM-yyyy HH:mm:ss")</td>
                    </tr>
                </tbody>
            </table>
        </summary>
        <table class="table" id="inner-table-leaderboard">
            <tbody>
                @foreach (var cap in group.Skip(1))
                {
                    <tr>
                        <td>@cap.Map</td>
                        <td>@TimeHelper.ReturnTime(cap.Time)</td>
                        <td>@cap.CapDate.ToString("dd-MM-yyyy HH:mm:ss")</td>
                    </tr>
                }
            </tbody>
        </table>
    </details>
}
